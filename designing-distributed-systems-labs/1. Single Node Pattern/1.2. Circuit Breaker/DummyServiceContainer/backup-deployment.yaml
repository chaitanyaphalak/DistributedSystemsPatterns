# This deployment fires up a dummyservice with the name backup-deployment that will be our backup server that we want to see become active when the dummy-deployment becomes unhealthy
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: backup-deployment
spec:
  # For simplicity we'll just fire up a single replica in our load balancer for this service
  replicas: 1
  template:
    metadata:
      labels:
        app: backup-deployment
    spec:
      containers:
      - name: backup-depoyment
        # This is were you point to the image you deployed to the Docker image you deployed to your ACR registry
        image: circuitbreakerregistry.azurecr.io/dummyservice
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            # The /alive endpoint is the one we will not touch in our test case, as this will trigger a kill and recreate from Kubernetes when this does not return 200
            path: /alive
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
      imagePullSecrets:
      # Here we refer to the secret you generated earlier so that you can access the Docker image from your private Docker hub / ACR registry
      - name: circuitbreakerregistry.azurecr.io
